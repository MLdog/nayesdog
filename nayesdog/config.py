import os
import imp

HOME = os.path.expanduser("~")
DEFAULTCONFIGPATH = os.path.join(HOME, '.nayesdog')
default_config_file = DEFAULTCONFIGPATH+"/config.py"

default_config = """
'''Default configuration file generated by NayseDog'''

from nayesdog.config import get_name_in_library, DEFAULTCONFIGPATH 

feeds_url_dict = {
    'Nature Research': 'http://feeds.nature.com/NatureLatestResearch',
    'Arstechnica': 'http://feeds.arstechnica.com/arstechnica/science',
    'Science': 'http://www.sciencemag.org/rss/current.xml',
} 
word_counts_database_file = DEFAULTCONFIGPATH + '/tables.py.gz'
previous_session_database_file = DEFAULTCONFIGPATH + '/previous_session'
maximal_number_of_entries_in_memory = 2000

server_address = ('127.0.0.1', 8081)
cssfile = get_name_in_library('css.css')
stopwords_file = get_name_in_library('stopwords.txt')
icons_folder = get_name_in_library("icons")
"""

def get_name_in_library(name, module_name="nayesdog"):
    library_location = imp.find_module(module_name)[1]
    return os.path.join(library_location, name)

def write_simple_config(file_name = default_config_file):
    if not os.path.isdir(DEFAULTCONFIGPATH):
        os.makedirs(DEFAULTCONFIGPATH)
    with open(file_name, "w") as f:
        f.write(default_config)


def make_me_config(file_path=None,
                   name='cfg'):
    if file_path is None:
        file_path = default_config_file
        if not os.path.isfile(default_config_file):
            write_simple_config()

    with open(file_path, 'r') as f:
        config_str = f.read()

    # make new python module and exec file inside this module
    module = imp.new_module(name)
    exec config_str in module.__dict__
    # put module variables into dict
    pars = {k:v for k,v in module.__dict__.items() if '__' != k[:2]}
    return pars

def get_pars_for_facelib(file_path=None):
    from inspect import getargspec
    from facelib import run
    list_of_user_parameters = getargspec(run).args
    #list_of_user_parameters = [
    #"server_address",
    #"cssfile",
    #"feeds_url_dict",
    #"word_counts_database_file",
    #"stopwords_file",
    #"previous_session_database_file",
    #"maximal_number_of_entries_in_memory",
    #"icons_folder"]

    pars = make_me_config(file_path=file_path)
    pars = {k:v for k,v in pars.items() if k in list_of_user_parameters}
    return pars

